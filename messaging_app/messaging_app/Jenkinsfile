pipeline {
    agent any

    environment {
        VENV = 'venv'
        REPO_URL = 'https://github.com/your-username/alx-backend-python.git'
        BRANCH = 'main'
        DOCKER_IMAGE = 'your-dockerhub-username/messaging_app'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                echo "Cloning branch: ${BRANCH}"
                git credentialsId: 'your-github-credentials-id', url: "${REPO_URL}", branch: "${BRANCH}"
                sh 'git branch'
            }
        }

        stage('Setup Python Environment') {
            steps {
                echo "Creating virtual environment and installing dependencies"
                sh 'python3 -m venv $VENV'
                sh './$VENV/bin/pip3 install --upgrade pip'
                sh './$VENV/bin/pip3 install -r messaging_app/requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                echo "Running pytest and generating report"
                sh './$VENV/bin/pytest messaging_app/tests/ --junitxml=report.xml'
            }
        }

        stage('Publish Report') {
            steps {
                junit 'report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image"
                sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} messaging_app/"
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'your-dockerhub-credentials-id', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    echo "Logging in to Docker Hub"
                    sh "echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin"
                    sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
                }
            }
        }
    }
}
